{"remainingRequest":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/src/pages/Glosario.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/src/pages/Glosario.vue","mtime":1734974319559},{"path":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBwbGFudGlsbGFNaXhpbnMgZnJvbSAnQC9qcy9wbGFudGlsbGFNaXhpbnMnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnR2xvc2FyaW8nLAogIG1peGluczogW3BsYW50aWxsYU1peGluc10sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGdsb3NhcmlvRGF0YTogWwogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdBUEkgKDxlbT5BcHBsaWNhdGlvbiBQcm9ncmFtbWluZyBJbnRlcmZhY2U8L2VtPiknLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdDb25qdW50byBkZSByZWdsYXMgeSBwcm90b2NvbG9zIHF1ZSBwZXJtaXRlbiBsYSBjb211bmljYWNpw7NuIGVudHJlIGRpZmVyZW50ZXMgY29tcG9uZW50ZXMgZGUgPGVtPnNvZnR3YXJlPC9lbT4uJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdCcmFuY2ggKFJhbWEpJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnRW4gY29udHJvbCBkZSB2ZXJzaW9uZXMsIHVuYSBsw61uZWEgaW5kZXBlbmRpZW50ZSBkZSBkZXNhcnJvbGxvIHF1ZSBwZXJtaXRlIHRyYWJhamFyIGVuIGNhcmFjdGVyw61zdGljYXMgbyBjb3JyZWNjaW9uZXMgc2luIGFmZWN0YXIgZWwgY8OzZGlnbyBwcmluY2lwYWwuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICc8ZW0+Q29tbWl0PC9lbT4nLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdJbnN0YW50w6FuZWEgZGVsIGPDs2RpZ28gZW4gdW4gbW9tZW50byBlc3BlY8OtZmljbyBxdWUgcmVnaXN0cmEgY2FtYmlvcyBlbiBlbCByZXBvc2l0b3JpbyBkZSBjb250cm9sIGRlIHZlcnNpb25lcy4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJzxlbT5EZWJ1Z2dpbmc8L2VtPicsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ1Byb2Nlc28gZGUgaWRlbnRpZmljYWNpw7NuIHkgY29ycmVjY2nDs24gZGUgZXJyb3JlcyBlbiBlbCBjw7NkaWdvIGZ1ZW50ZS4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJzxlbT5EZXBsb3k8L2VtPiAoRGVzcGxpZWd1ZSknLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdQcm9jZXNvIGRlIHBvbmVyIHVuYSBhcGxpY2FjacOzbiBlbiBwcm9kdWNjacOzbiBvIGhhY2VybGEgZGlzcG9uaWJsZSBwYXJhIHN1IHVzby4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJ0dpdCcsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ1Npc3RlbWEgZGUgY29udHJvbCBkZSB2ZXJzaW9uZXMgZGlzdHJpYnVpZG8gZGlzZcOxYWRvIHBhcmEgbWFuZWphciBwcm95ZWN0b3MgZGUgY3VhbHF1aWVyIHRhbWHDsW8gY29uIHZlbG9jaWRhZCB5IGVmaWNpZW5jaWEuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdJREUgKDxlbT5JbnRlZ3JhdGVkIERldmVsb3BtZW50IEVudmlyb25tZW50PC9lbT4pJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnRW50b3JubyBkZSBkZXNhcnJvbGxvIGludGVncmFkbyBxdWUgcHJvcG9yY2lvbmEgaGVycmFtaWVudGFzIGNvbXByZW5zaXZhcyBwYXJhIGxhIHByb2dyYW1hY2nDs24uJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICc8ZW0+TWVyZ2U8L2VtPiAoRnVzacOzbiknLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdQcm9jZXNvIGRlIGNvbWJpbmFyIGNhbWJpb3MgZGUgZGlmZXJlbnRlcyByYW1hcyBlbiBlbCBjb250cm9sIGRlIHZlcnNpb25lcy4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJ01pY3Jvc2VydmljaW9zJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnQXJxdWl0ZWN0dXJhIHF1ZSBlc3RydWN0dXJhIHVuYSBhcGxpY2FjacOzbiBjb21vIHVuIGNvbmp1bnRvIGRlIHNlcnZpY2lvcyBwZXF1ZcOxb3MgZSBpbmRlcGVuZGllbnRlcy4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJzxlbT5QaXBlbGluZTwvZW0+JywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnU2VjdWVuY2lhIGF1dG9tYXRpemFkYSBkZSBwcm9jZXNvcyBwYXJhIGxsZXZhciBlbCBjw7NkaWdvIGRlc2RlIGVsIGRlc2Fycm9sbG8gaGFzdGEgbGEgcHJvZHVjY2nDs24uJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdQdWxsIFJlcXVlc3QnLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdTb2xpY2l0dWQgcGFyYSBpbnRlZ3JhciBjYW1iaW9zIGRlIHVuYSByYW1hIGEgb3RyYSwgdMOtcGljYW1lbnRlIHV0aWxpemFkYSBwYXJhIHJldmlzacOzbiBkZSBjw7NkaWdvLicsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXJtaW5vOiAnUkVTVCcsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ0VzdGlsbyBkZSBhcnF1aXRlY3R1cmEgZGUgPGVtPnNvZnR3YXJlPC9lbT4gcGFyYSBzaXN0ZW1hcyBkaXN0cmlidWlkb3MsIGVzcGVjaWFsbWVudGUgdXNhZG8gZW4gQVBJcyB3ZWIuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdTdGFnaW5nIEFyZWEnLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdFbiBHaXQsIMOhcmVhIGludGVybWVkaWEgZG9uZGUgc2UgcHJlcGFyYW4gbG9zIGNhbWJpb3MgYW50ZXMgZGUgY29uZmlybWFybG9zLicsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXJtaW5vOiAnPGVtPlRlc3Rpbmc8L2VtPicsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ1Byb2Nlc28gZGUgZXZhbHVhciB1biBzaXN0ZW1hIG8gY29tcG9uZW50ZSBwYXJhIHZlcmlmaWNhciBxdWUgY3VtcGxlIGNvbiBsb3MgcmVxdWlzaXRvcyBlc3BlY2lmaWNhZG9zLicsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXJtaW5vOiAnVmVyc2lvbmFtaWVudG8nLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdTaXN0ZW1hIHBhcmEgcmVnaXN0cmFyIGNhbWJpb3MgZW4gYXJjaGl2b3MgZGUgY8OzZGlnbyBmdWVudGUgYSBsbyBsYXJnbyBkZWwgdGllbXBvLicsCiAgICAgICAgfSwKICAgICAgXSwKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBvcmRlcmVkRGF0YSgpIHsKICAgICAgY29uc3QgbmV3R2xvc2FyaW9EYXRhID0gWy4uLnRoaXMuZ2xvc2FyaW9EYXRhXQogICAgICBuZXdHbG9zYXJpb0RhdGEuZm9yRWFjaChlbGVtZW50ID0+IHsKICAgICAgICBlbGVtZW50LnNpZ25pZmljYWRvID0KICAgICAgICAgIGVsZW1lbnQuc2lnbmlmaWNhZG8uY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgKwogICAgICAgICAgZWxlbWVudC5zaWduaWZpY2Fkby5zbGljZSgxKQogICAgICB9KQoKICAgICAgY29uc3Qgc29ydGVkRGF0YSA9IFsuLi5uZXdHbG9zYXJpb0RhdGFdLnJlZHVjZSgociwgZSkgPT4gewogICAgICAgIGNvbnN0IGxldHJhID0gdGhpcy5xdWl0YXJBY2VudG9zKGUudGVybWluby50b0xvd2VyQ2FzZSgpKVswXQogICAgICAgIGlmICghcltsZXRyYV0pIHJbbGV0cmFdID0geyBsZXRyYSwgdGVybWlub3M6IFtlXSB9CiAgICAgICAgZWxzZSByW2xldHJhXS50ZXJtaW5vcy5wdXNoKGUpCiAgICAgICAgcmV0dXJuIHIKICAgICAgfSwge30pCgogICAgICBjb25zdCBzb2xvTGV0cmFzID0gT2JqZWN0LmtleXMoc29ydGVkRGF0YSkuc29ydCgpCiAgICAgIGNvbnN0IG5ld1NvcnRlZERhdGEgPSBbXQoKICAgICAgc29sb0xldHJhcy5mb3JFYWNoKGVsZW1lbnQgPT4gewogICAgICAgIGNvbnN0IGxldHJhT2JqID0gc29ydGVkRGF0YVtlbGVtZW50XQogICAgICAgIGxldCB0ZXJtaW5vcyA9IGxldHJhT2JqLnRlcm1pbm9zCgogICAgICAgIGlmICh0ZXJtaW5vcy5sZW5ndGggPiAxKSB7CiAgICAgICAgICBjb25zdCB0ZXJtaW5vc09yZGVuYWRvcyA9IFtdCiAgICAgICAgICBjb25zdCBzb2xvVGVybWlub3MgPSBsZXRyYU9iai50ZXJtaW5vcwogICAgICAgICAgICAubWFwKHRlcm1PYmogPT4gdGVybU9iai50ZXJtaW5vKQogICAgICAgICAgICAuc29ydCgoYSwgYikgPT4gewogICAgICAgICAgICAgIGNvbnN0IGFuID0gdGhpcy5xdWl0YXJBY2VudG9zKGEpLnRvTG93ZXJDYXNlKCkKICAgICAgICAgICAgICBjb25zdCBibiA9IHRoaXMucXVpdGFyQWNlbnRvcyhiKS50b0xvd2VyQ2FzZSgpCiAgICAgICAgICAgICAgaWYgKGFuIDwgYm4pIHJldHVybiAtMQogICAgICAgICAgICAgIGlmIChibiA8IGFuKSByZXR1cm4gMQogICAgICAgICAgICAgIHJldHVybiAwCiAgICAgICAgICAgIH0pCiAgICAgICAgICBzb2xvVGVybWlub3MuZm9yRWFjaCh0ZXJtID0+IHsKICAgICAgICAgICAgdGVybWlub3NPcmRlbmFkb3MucHVzaCgKICAgICAgICAgICAgICB0ZXJtaW5vcy5maW5kKHRlcm1pbm8gPT4gdGVybWluby50ZXJtaW5vID09PSB0ZXJtKSwKICAgICAgICAgICAgKQogICAgICAgICAgfSkKICAgICAgICAgIHRlcm1pbm9zID0gdGVybWlub3NPcmRlbmFkb3MKICAgICAgICB9CiAgICAgICAgbmV3U29ydGVkRGF0YS5wdXNoKHsKICAgICAgICAgIGxldHJhOiBsZXRyYU9iai5sZXRyYS50b1VwcGVyQ2FzZSgpLAogICAgICAgICAgdGVybWlub3M6IHRlcm1pbm9zLAogICAgICAgIH0pCiAgICAgIH0pCiAgICAgIHJldHVybiBuZXdTb3J0ZWREYXRhCiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["Glosario.vue"],"names":[],"mappings":";AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Glosario.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"curso-main-container glosario\">\n    <BannerInterno icono=\"fas fa-atlas\" titulo=\"Glosario\"></BannerInterno>\n    <div class=\"container tarjeta tarjeta--blanca p-4 p-md-5 mb-5\">\n      <div\n        v-for=\"letra in orderedData\"\n        :key=\"'letra-' + letra.letra\"\n        class=\"glosario__letra-item mb-2\"\n      >\n        <div class=\"glosario__letra-item__letra me-4\">\n          <div class=\"glosario__letra-item__letra__icono\">\n            <span>{{ letra.letra }}</span>\n          </div>\n        </div>\n        <div class=\"glosario__letra-item__texto\">\n          <p\n            v-for=\"termino in letra.terminos\"\n            :key=\"termino.termino\"\n            class=\"mb-3\"\n          >\n            <strong><i class=\"lista-ul__vineta\"></i></strong\n            ><strong v-html=\"termino.terminoHtml || termino.termino\"> </strong\n            ><strong>: </strong><span v-html=\"termino.significado\"></span>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport plantillaMixins from '@/js/plantillaMixins'\nexport default {\n  name: 'Glosario',\n  mixins: [plantillaMixins],\n  data() {\n    return {\n      glosarioData: [\n        {\n          termino: 'API (<em>Application Programming Interface</em>)',\n          significado:\n            'Conjunto de reglas y protocolos que permiten la comunicación entre diferentes componentes de <em>software</em>.',\n        },\n        {\n          termino: 'Branch (Rama)',\n          significado:\n            'En control de versiones, una línea independiente de desarrollo que permite trabajar en características o correcciones sin afectar el código principal.',\n        },\n        {\n          termino: '<em>Commit</em>',\n          significado:\n            'Instantánea del código en un momento específico que registra cambios en el repositorio de control de versiones.',\n        },\n        {\n          termino: '<em>Debugging</em>',\n          significado:\n            'Proceso de identificación y corrección de errores en el código fuente.',\n        },\n        {\n          termino: '<em>Deploy</em> (Despliegue)',\n          significado:\n            'Proceso de poner una aplicación en producción o hacerla disponible para su uso.',\n        },\n        {\n          termino: 'Git',\n          significado:\n            'Sistema de control de versiones distribuido diseñado para manejar proyectos de cualquier tamaño con velocidad y eficiencia.',\n        },\n        {\n          termino: 'IDE (<em>Integrated Development Environment</em>)',\n          significado:\n            'Entorno de desarrollo integrado que proporciona herramientas comprensivas para la programación.',\n        },\n        {\n          termino: '<em>Merge</em> (Fusión)',\n          significado:\n            'Proceso de combinar cambios de diferentes ramas en el control de versiones.',\n        },\n        {\n          termino: 'Microservicios',\n          significado:\n            'Arquitectura que estructura una aplicación como un conjunto de servicios pequeños e independientes.',\n        },\n        {\n          termino: '<em>Pipeline</em>',\n          significado:\n            'Secuencia automatizada de procesos para llevar el código desde el desarrollo hasta la producción.',\n        },\n        {\n          termino: 'Pull Request',\n          significado:\n            'Solicitud para integrar cambios de una rama a otra, típicamente utilizada para revisión de código.',\n        },\n        {\n          termino: 'REST',\n          significado:\n            'Estilo de arquitectura de <em>software</em> para sistemas distribuidos, especialmente usado en APIs web.',\n        },\n        {\n          termino: 'Staging Area',\n          significado:\n            'En Git, área intermedia donde se preparan los cambios antes de confirmarlos.',\n        },\n        {\n          termino: '<em>Testing</em>',\n          significado:\n            'Proceso de evaluar un sistema o componente para verificar que cumple con los requisitos especificados.',\n        },\n        {\n          termino: 'Versionamiento',\n          significado:\n            'Sistema para registrar cambios en archivos de código fuente a lo largo del tiempo.',\n        },\n      ],\n    }\n  },\n  computed: {\n    orderedData() {\n      const newGlosarioData = [...this.glosarioData]\n      newGlosarioData.forEach(element => {\n        element.significado =\n          element.significado.charAt(0).toLowerCase() +\n          element.significado.slice(1)\n      })\n\n      const sortedData = [...newGlosarioData].reduce((r, e) => {\n        const letra = this.quitarAcentos(e.termino.toLowerCase())[0]\n        if (!r[letra]) r[letra] = { letra, terminos: [e] }\n        else r[letra].terminos.push(e)\n        return r\n      }, {})\n\n      const soloLetras = Object.keys(sortedData).sort()\n      const newSortedData = []\n\n      soloLetras.forEach(element => {\n        const letraObj = sortedData[element]\n        let terminos = letraObj.terminos\n\n        if (terminos.length > 1) {\n          const terminosOrdenados = []\n          const soloTerminos = letraObj.terminos\n            .map(termObj => termObj.termino)\n            .sort((a, b) => {\n              const an = this.quitarAcentos(a).toLowerCase()\n              const bn = this.quitarAcentos(b).toLowerCase()\n              if (an < bn) return -1\n              if (bn < an) return 1\n              return 0\n            })\n          soloTerminos.forEach(term => {\n            terminosOrdenados.push(\n              terminos.find(termino => termino.termino === term),\n            )\n          })\n          terminos = terminosOrdenados\n        }\n        newSortedData.push({\n          letra: letraObj.letra.toUpperCase(),\n          terminos: terminos,\n        })\n      })\n      return newSortedData\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\">\n.glosario\n  &__letra-item\n    display: flex\n    &__texto\n      padding-top: 5px\n    &__letra\n      &__icono\n        width: 32px\n        height: 32px\n        position: relative\n        line-height: 1em\n        border-radius: 50%\n        background-color: $color-sistema-d\n\n        span\n          position: absolute\n          left: 50%\n          top: 50%\n          transform: translate(-50%,-50%)\n          font-size: 1.1em\n          font-weight: $base-black-font-weight\n</style>\n"]}]}