{"remainingRequest":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/src/pages/Tema4.vue?vue&type=template&id=e07955c4&lang=pug","dependencies":[{"path":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/src/pages/Tema4.vue","mtime":1734974319560},{"path":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/CF4_228141_TEC_DESARROLLO_SOLUCIONES_INFORMATICAS_IA/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}